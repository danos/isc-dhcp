Description: Enable creating a dhcp server address pool without
             having an interface into that network.
Author: Vyatta Package Maintainers <DL-vyatta-help@att.com>

--- a/common/discover.c
+++ b/common/discover.c
@@ -942,9 +942,10 @@
 
 	/* If we already have a list of interfaces, and we're running as
 	   a DHCP server, the interfaces were requested. */
-	if (interfaces && (state == DISCOVER_SERVER ||
-			   state == DISCOVER_RELAY ||
-			   state == DISCOVER_REQUESTED))
+	if (interfaces && (state == DISCOVER_SERVER))
+		ir = INTERFACE_REQUESTED;
+	else if (interfaces && (state == DISCOVER_RELAY ||
+				state == DISCOVER_REQUESTED))
 		ir = 0;
 	else if (state == DISCOVER_UNCONFIGURED)
 		ir = INTERFACE_REQUESTED | INTERFACE_AUTOMATIC;
@@ -1139,7 +1140,8 @@
 		last = tmp;
 
 		/* We must have a subnet declaration for each interface. */
-		if (!tmp->shared_network && (state == DISCOVER_SERVER)) {
+		if (!tmp->shared_network && (state == DISCOVER_SERVER) &&
+		    !(tmp->flags & INTERFACE_MANDATORY)) {
 			log_error("%s", "");
 			if (local_family == AF_INET) {
 				log_error("No subnet declaration for %s (%s).",
--- a/includes/dhcpd.h
+++ b/includes/dhcpd.h
@@ -1285,6 +1285,7 @@
 #define INTERFACE_DOWNSTREAM 8
 #define INTERFACE_UPSTREAM 16
 #define INTERFACE_STREAMS (INTERFACE_DOWNSTREAM | INTERFACE_UPSTREAM)
+#define INTERFACE_MANDATORY 32
 
 	/* Only used by DHCP client code. */
 	struct client_state *client;
--- a/server/dhcpd.c
+++ b/server/dhcpd.c
@@ -348,7 +348,7 @@
 				interface_dereference (&interfaces, MDL);
 			}
 			interface_reference (&interfaces, tmp, MDL);
-			tmp -> flags = INTERFACE_REQUESTED;
+			tmp -> flags = INTERFACE_REQUESTED | INTERFACE_MANDATORY;
 		}
 	}
 
@@ -1237,7 +1237,7 @@
 		share = subnet -> shared_network;
 		if (ip -> shared_network &&
 		    ip -> shared_network != share) {
-			log_fatal ("Interface %s matches multiple shared %s",
+			log_error ("Interface %s matches multiple shared %s",
 				   ip -> name, "networks");
 		} else {
 			if (!ip -> shared_network)
